name: Release

on:
  workflow_dispatch:
    inputs:
      lastTag:
        description: 'Previous Tag (ex: v2.0.0+1.20.2)'
        required: true
      newTag:
        description: 'New Tag (ex: v2.0.1+1.20.3)'
        required: true
      publishToModDistributors:
        description: 'Publish to Modrinth and CurseForge'
        required: true
        type: boolean

jobs:
  publish:
    strategy:
      matrix:
        # Use these Java versions
        java: [17]
        # and run on both Linux and Windows
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create version tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ github.event.inputs.newTag }}",
              sha: context.sha
            })

      - name: Fetch tags
        run: git fetch --tags

      - name: Fetch repo data
        run: git fetch origin

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Publish to JackFredMaven and GitHub Release
        run: ./gradlew build generateChangelog publish githubRelease -PlastTag="${{ github.event.inputs.lastTag }}" -PnewTag="${{ github.event.inputs.newTag }}"
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JACKFRED_MAVEN_USER: ${{ secrets.JACKFRED_MAVEN_USER }}
          JACKFRED_MAVEN_PASS: ${{ secrets.JACKFRED_MAVEN_PASS }}

      - name: Publish to Modrinth and Curseforge
        run: ./gradlew build generateChangelog publishMods -PlastTag="${{ github.event.inputs.lastTag }}" -PnewTag="${{ github.event.inputs.newTag }}"
        if: ${{ github.event.inputs.publishToModDistributors == 'true' }}
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JACKFRED_MAVEN_USER: ${{ secrets.JACKFRED_MAVEN_USER }}
          JACKFRED_MAVEN_PASS: ${{ secrets.JACKFRED_MAVEN_PASS }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}

      - name: Capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from LTS java on one OS
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: |
            build/libs/